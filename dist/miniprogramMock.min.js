!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).miniprogramMock={})}(this,(function(e){"use strict";
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */var t=function(){return(t=Object.assign||function(e){for(var t,o=1,a=arguments.length;o<a;o++)for(var n in t=arguments[o])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},o={};["drawCanvas","createContext","createCanvasContext","canvasToTempFilePath","canvasGetImageData","canvasPutImageData","createOffscreenCanvas","getAccountInfoSync","getShareInfo","pageScrollTo","chooseInvoiceTitle","chooseInvoice","arrayBufferToBase64","base64ToArrayBuffer","openSetting","getExtConfig","chooseMedia","chooseMultiMedia","chooseMessageFile","chooseWeChatContact","uploadEncryptedFileToCDN","onUploadEncryptedFileToCDNProgress","getExtConfigSync","showShareMenu","hideShareMenu","updateShareMenu","shareAppMessageForFakeNative","openUrl","setNavigationBarColor","setNavigationBarAlpha","vibrateShort","vibrateLong","getSetting","checkIsSupportFacialRecognition","startFacialRecognitionVerify","startFacialRecognitionVerifyAndUploadVideo","startCustomFacialRecognitionVerify","startCustomFacialRecognitionVerifyAndUploadVideo","sendBizRedPacket","sendGoldenRedPacket","openGoldenRedPacketDetail","addPhoneContact","setScreenBrightness","getScreenBrightness","getWeRunData","uploadWeRunData","addWeRunData","canIUse","setPageStyle","triggerGettingWidgetData","navigateToMiniProgram","navigateToMiniProgramDirectly","navigateToDevMiniProgram","navigateBackMiniProgram","launchMiniProgram","launchApplicationDirectly","setNavigationBarRightButton","onTapNavigationBarRightButton","setTopBarText","setTabBarBadge","removeTabBarBadge","showTabBarRedDot","hideTabBarRedDot","showTabBar","hideTabBar","setTabBarStyle","setTabBarItem","setBackgroundColor","setBackgroundTextStyle","setEnableDebug","captureScreen","onUserCaptureScreen","setKeepScreenOn","checkIsSupportSoterAuthentication","startSoterAuthentication","checkIsSoterEnrolledInDevice","openDeliveryList","navigateBackH5","openBusinessView","navigateBackApplication","navigateBackNative","reportIDKey","reportKeyValue","setNavigationBarTitle","showNavigationBarLoading","hideNavigationBarLoading","startPullDownRefresh","stopPullDownRefresh","operateWXData","getOpenDeviceId","getMenuButtonBoundingClientRect","getSelectedTextRange","openBluetoothAdapter","closeBluetoothAdapter","getBluetoothAdapterState","onBluetoothAdapterStateChange","startBluetoothDevicesDiscovery","stopBluetoothDevicesDiscovery","getBluetoothDevices","getConnectedBluetoothDevices","createBLEConnection","closeBLEConnection","getBLEDeviceServices","getBLEDeviceCharacteristics","notifyBLECharacteristicValueChanged","notifyBLECharacteristicValueChange","readBLECharacteristicValue","writeBLECharacteristicValue","onBluetoothDeviceFound","onBLEConnectionStateChanged","onBLEConnectionStateChange","onBLECharacteristicValueChange","startBeaconDiscovery","stopBeaconDiscovery","getBeacons","onBeaconUpdate","onBeaconServiceChange","startWifi","stopWifi","getWifiList","getConnectedWifi","connectWifi","presetWifiList","setWifiList","onGetWifiList","onWifiConnected","onEvaluateWifi","getHCEState","startHCE","stopHCE","sendHCEMessage","onHCEMessage","startLocalServiceDiscovery","stopLocalServiceDiscovery","onLocalServiceFound","offLocalServiceFound","onLocalServiceLost","offLocalServiceLost","onLocalServiceDiscoveryStop","offLocalServiceDiscoveryStop","onLocalServiceResolveFail","offLocalServiceResolveFail","redirectTo","reLaunch","navigateTo","switchTab","navigateBack","onAppShow","offAppShow","onAppHide","offAppHide","onError","offError","getLaunchOptionsSync","onWindowResize","offWindowResize","getStorage","getStorageSync","setStorage","setStorageSync","removeStorage","removeStorageSync","clearStorage","clearStorageSync","getStorageInfo","getStorageInfoSync","request","connectSocket","closeSocket","sendSocketMessage","onSocketOpen","onSocketClose","onSocketMessage","onSocketError","uploadFile","downloadFile","addNativeDownloadTask","calRqt","secureTunnel","chooseImage","previewImage","getImageInfo","saveImageToPhotosAlbum","compressImage","startRecord","stopRecord","playVoice","pauseVoice","stopVoice","onVoicePlayEnd","chooseVideo","saveVideoToPhotosAlbum","loadFontFace","getLocation","openLocation","chooseLocation","startLocationUpdate","stopLocationUpdate","onLocationChange","getNetworkType","onNetworkStatusChange","getSystemInfo","getSystemInfoSync","getBatteryInfo","getBatteryInfoSync","startAccelerometer","stopAccelerometer","onAccelerometerChange","startCompass","stopCompass","onCompassChange","startDeviceMotionListening","stopDeviceMotionListening","onDeviceMotionChange","startGyroscope","stopGyroscope","onGyroscopeChange","reportAction","getBackgroundAudioManager","getRecorderManager","getBackgroundAudioPlayerState","playBackgroundAudio","pauseBackgroundAudio","seekBackgroundAudio","stopBackgroundAudio","onBackgroundAudioPlay","onBackgroundAudioPause","onBackgroundAudioStop","joinVoIPChat","exitVoIPChat","updateVoIPChatMuteConfig","onVoIPChatMembersChanged","onVoIPChatSpeakersChanged","onVoIPChatInterrupted","login","checkSession","authorize","getUserInfo","requestPayment","verifyPaymentPassword","bindPaymentCard","requestPaymentToBank","requestVirtualPayment","openOfflinePayView","openWCPayCardList","requestMallPayment","setCurrentPaySpeech","loadPaySpeechDialectConfig","faceVerifyForPay","openOfficialAccountProfile","openMiniProgramProfile","openMiniProgramSearch","openMiniProgramHistoryList","openMiniProgramStarList","batchGetContactDirectly","preventApplePayUI","getWxSecData","addCard","openCard","scanCode","openQRCode","chooseAddress","saveFile","openDocument","getSavedFileList","getSavedFileInfo","getFileInfo","removeSavedFile","getFileSystemManager","getABTestConfig","chooseContact","removeUserCloudStorage","setUserCloudStorage","makePhoneCall","makeVoIPCall","onAppRoute","onAppRouteDone","onAppEnterBackground","onAppEnterForeground","onAppUnhang","onPageReload","onPageNotFound","offPageNotFound","createAnimation","createInnerAudioContext","getAvailableAudioSources","onAudioInterruptionBegin","offAudioInterruptionBegin","onAudioInterruptionEnd","offAudioInterruptionEnd","setInnerAudioOption","createAudioContext","createVideoContext","createMapContext","createCameraContext","createLivePlayerContext","createLivePusherContext","onWebviewEvent","onNativeEvent","hideKeyboard","onKeyboardHeightChange","getPublicLibVersion","showModal","showToast","hideToast","showLoading","hideLoading","showActionSheet","showShareActionSheet","reportAnalytics","reportMonitor","getClipboardData","setClipboardData","createSelectorQuery","createIntersectionObserver","nextTick","updatePerfData","traceEvent","onMemoryWarning","getUpdateManager","createWorker","voiceSplitJoint","uploadSilkVoice","downloadSilkVoice","getResPath","setResPath","setCookies","getCookies","getLabInfo","setLabInfo","createUDPSocket","env","createRewardedVideoAd","createInterstitialAd","getLogManager","getRealtimeLogManager","cloud","version","chooseShareGroup","enterContact"].forEach((function(e){o[e]=jest.fn()})),Object.defineProperty(global,"wx",{writable:!0,value:o});var a={},n=function(){function e(e,t){var o=this;this.cacheKey="no key",this.resData=null,this.errData=null,t&&(this.cacheKey=e+"."+JSON.stringify(t)),this.cacheKey=e,a[this.cacheKey]={apiName:e},global.wx[e]=jest.fn().mockImplementation((function(e){var t=e&&e.success?e.success:function(){},n=e&&e.fail?e.fail:function(){},r=e&&e.complete?e.complete:function(){};if(o.resData){var i=a[o.cacheKey].resData;t("function"==typeof i?i():a[o.cacheKey].resData),r()}if(o.errData){var c=a[o.cacheKey].errData;n("function"==typeof c?c():a[o.cacheKey].errData),r()}}))}return e.prototype.name=function(e){return this.cacheKey=e,this},e.prototype.success=function(e){return this.resData=null==e?null:e,a[this.cacheKey].resData=this.resData,global.wx[a[this.cacheKey].apiName]},e.prototype.fail=function(e){return this.errData=null==e?null:e,a[this.cacheKey].errData=this.errData,global.wx[a[this.cacheKey].apiName]},e}();global.wx?global.wx=t({},global.wx):global.wx={},global.getCurrentPages=jest.fn(),global.getApp=jest.fn(),global.App=jest.fn(),global.Page=jest.fn(),global.Component=jest.fn(),global.Behavior=jest.fn();var r=function(){function e(){}return e.prototype.mock=function(e,t){return new n(e,t)},e.prototype.mockGlobal=function(e){return global[e]=jest.fn(),global[e]},e}();e.default=r,Object.defineProperty(e,"__esModule",{value:!0})}));//# sourceMappingURL=miniprogramMock.min.js.map
